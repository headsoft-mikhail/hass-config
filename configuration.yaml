# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

recorder: !include recorder.yaml

homeassistant:
  customize: !include customize.yaml

logger: !include logger.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
homekit: !include homekit.yaml
yandex_station: !include yandex_station.yaml
yandex_smart_home: !include yaha_cloud.yaml
# modbus: !include modbus.yaml

# Custom entities

command_line:
  - sensor:
      command: "cat /sys/class/thermal/thermal_zone0/temp"
      name: RPi CPU Temperature
      unique_id: rpi_cpu_temperature
      device_class: temperature
      unit_of_measurement: "°C"
      value_template: "{{ (value | float / 1000) | round(1) }}"
      scan_interval: 60

sensor:
  - platform: snmp
    name: "SNMP Router Incoming Bytes"
    unique_id: snmp_router_incoming_bytes
    host: 192.168.1.1
    community: "public"
    baseoid: 1.3.6.1.2.1.31.1.1.1.6.9 # ifHCInOctets.9
    version: 2c
    scan_interval: 10
    unit_of_measurement: B
    device_class: data_size
    state_class: total_increasing

  - platform: snmp
    name: "SNMP Router Outgoing Bytes"
    unique_id: snmp_router_outgoing_bytes
    host: 192.168.1.1
    community: "public"
    baseoid: 1.3.6.1.2.1.31.1.1.1.10.9 # ifHCOutOctets.9
    version: 2c
    scan_interval: 10
    unit_of_measurement: B
    device_class: data_size
    state_class: total_increasing

  - platform: derivative
    name: "SNMP Router Incoming Bytes Derivative"
    source: sensor.snmp_router_incoming_bytes
    unit_time: s
    unit: B/s
    round: 2

  - name: "SNMP Router Outgoing Bytes Derivative"
    platform: derivative
    source: sensor.snmp_router_outgoing_bytes
    unit_time: s
    unit: B/s
    round: 2

utility_meter:
  monthly_download:
    name: "SNMP Router Incoming Bytes Monthly"
    unique_id: snmp_router_incoming_bytes_monthly
    source: sensor.snmp_router_incoming_bytes
    cycle: monthly
    always_available: true
  monthly_upload:
    name: "SNMP Router Outgoing Bytes Monthly"
    unique_id: snmp_router_outgoing_bytes_monthly
    source: sensor.snmp_router_outgoing_bytes
    cycle: monthly
    always_available: true

switch:
  - platform: rpi_gpio
    switches:
      - port: 17
        name: RPi cooling fan
        unique_id: rpi_cooling_fan

input_select:
  sound_signal_source:
    name: "Источник сигнала колонок"
    options:
      - "Off"
      - "Optical"
      - "Bluetooth"
      - "Line 1"
      - "Line 2"
      - "Coax"
    initial: "Off"
    icon: "mdi:soundbar"

input_datetime:
  petkit_pura_air_filter_replaced:
    name: "Petkit Pura Air - Filter - Reset date"
    has_date: true
    has_time: false

template:
  - sensor:
      - name: "Total CPU Usage"
        unique_id: "total_cpu_usage"
        unit_of_measurement: "%"
        state: >
          {{ 
            (
              states('sensor.zigbee2mqtt_cpu_percent') | float(0) +
              states('sensor.studio_code_server_cpu_percent') | float(0) +
              states('sensor.silicon_labs_flasher_cpu_percent') | float(0) +
              states('sensor.mosquitto_broker_cpu_percent') | float(0) +
              states('sensor.mariadb_cpu_percent') | float(0) +
              states('sensor.home_assistant_supervisor_cpu_percent') | float(0) +
              states('sensor.home_assistant_google_drive_backup_cpu_percent') | float(0) +
              states('sensor.home_assistant_core_cpu_percent') | float(0) +
              states('sensor.advanced_ssh_web_terminal_cpu_percent') | float(0) +
              states('sensor.adguard_home_cpu_percent') | float(0)
            ) | round(2) 
          }}
        attributes:
          HA_Core: "{{ states('sensor.home_assistant_core_cpu_percent') }}"
          HA_Supervisor: "{{ states('sensor.home_assistant_supervisor_cpu_percent') }}"
          Maria_DB: "{{ states('sensor.mariadb_cpu_percent') }}"
          Mosqitto_broker: "{{ states('sensor.mosquitto_broker_cpu_percent') }}"
          Zigbee2mqtt: "{{ states('sensor.zigbee2mqtt_cpu_percent') }}"
          Google_Drive_backup: "{{ states('sensor.home_assistant_google_drive_backup_cpu_percent') }}"
          Studio_Code_server: "{{ states('sensor.studio_code_server_cpu_percent') }}"
          SSH_web_terminal: "{{ states('sensor.advanced_ssh_web_terminal_cpuy_percent') }}"
          AdGuard_home: "{{ states('sensor.adguard_home_cpu_percent') }}"
          Silicon_labs_flasher: "{{ states('sensor.silicon_labs_flashe_cpu_percent')  }}"
      - name: "Total RAM Usage"
        unique_id: "total_ram_usage"
        unit_of_measurement: "%"
        state: >
          {{ 
            (
              states('sensor.zigbee2mqtt_memory_percent') | float(0) +
              states('sensor.studio_code_server_memory_percent') | float(0) +
              states('sensor.silicon_labs_flasher_memory_percent') | float(0) +
              states('sensor.mosquitto_broker_memory_percent') | float(0) +
              states('sensor.mariadb_memory_percent') | float(0) +
              states('sensor.home_assistant_supervisor_memory_percent') | float(0) +
              states('sensor.home_assistant_google_drive_backup_memory_percent') | float(0) +
              states('sensor.home_assistant_core_memory_percent') | float(0) +
              states('sensor.advanced_ssh_web_terminal_memory_percent') | float(0) +
              states('sensor.adguard_home_memory_percent') | float(0)
            ) | round(2) 
          }}
        attributes:
          HA_Core: "{{ states('sensor.home_assistant_core_memory_percent')  }}"
          HA_Supervisor: "{{ states('sensor.home_assistant_supervisor_memory_percent')  }}"
          Maria_DB: "{{ states('sensor.mariadb_memory_percent')  }}"
          Mosqitto_broker: "{{ states('sensor.mosquitto_broker_memory_percent')  }}"
          Zigbee2mqtt: "{{ states('sensor.zigbee2mqtt_memory_percent')  }}"
          Google_Drive_backup: "{{ states('sensor.home_assistant_google_drive_backup_memory_percent')  }}"
          Studio_Code_server: "{{ states('sensor.studio_code_server_memory_percent')  }}"
          SSH_web_terminal: "{{ states('sensor.advanced_ssh_web_terminal_memory_percent')  }}"
          AdGuard_home: "{{ states('sensor.adguard_home_memory_percent')  }}"
          Silicon_labs_flasher: "{{ states('sensor.silicon_labs_flasher_memory_percent')  }}"
      - name: "petkit_pura_air_filter_days_left"
        unique_id: "petkit_pura_air_filter_days_left"
        unit_of_measurement: "d"
        state: >
          {% set start = states('input_datetime.petkit_pura_air_filter_replaced') %}
          {% if start not in ['unknown', 'unavailable'] %}
            {% set days_left = 90 - ((now().date() - as_datetime(start).date()).days) %}
            {{ [days_left, 0] | max }}
          {% else %}
            90
          {% endif %}
        attributes:
          last_update: "{{ now() }}"
        availability: "{{ states('input_datetime.petkit_pura_air_filter_replaced') not in ['unknown', 'unavailable'] }}"
      - name: "airmonitor2_tvoc_ug"
        unique_id: "airmonitor2_tvoc_ug"
        unit_of_measurement: "µg/m³"
        state: '{{ (states("sensor.airmonitor2_etvoc") | float(0) * 1000) | round(0) }}'
        attributes:
          device_class: volatile_organic_compounds
      - name: "efekta_smart_aq_box_tvoc_ug"
        unique_id: "efekta_smart_aq_box_tvoc_ug"
        unit_of_measurement: "µg/m³"
        state: >
          {% set x = states('sensor.efekta_smart_aq_box_voc_index') | float(0) %}
          {{ ((
                -0.03196 +
                0.01081 * x +
                0.0003349 * x**2 -
                0.000003332 * x**3 +
                0.000000009259 * x**4 -
                0.000000000007215 * x**5
              ) * 1000) | round(0) 
          }}
        attributes:
          device_class: volatile_organic_compounds
      - name: "SNMP Router Download Speed"
        unique_id: snmp_router_download_speed
        unit_of_measurement: "Mbit/s"
        device_class: data_rate
        state_class: measurement
        state: "{{(8 * states('sensor.snmp_router_incoming_bytes_derivative') | float(0) / 1000000) | round(2)}}"
      - name: "SNMP Router Upload Speed"
        unique_id: snmp_router_upload_speed
        unit_of_measurement: "Mbit/s"
        device_class: data_rate
        state_class: measurement
        state: "{{(8 * states('sensor.snmp_router_outgoing_bytes_derivative') | float(0) / 1000000) | round(2)}}"

  - binary_sensor:
    - name: "Обогрев балкона"
      unique_id: meross_power_outlet_1_activity
      device_class: motion
      state: "{{ states('sensor.meross_power_outlet_1_power')|float(0) > 50 }}"
      delay_off:
        seconds: 10

generic_hygrostat:
  - name: switch_humidifier
    unique_id: switch_humidifier
    humidifier: switch.ahtom_outlet_humidifier
    target_sensor: sensor.airmonitor2_humidity
    min_humidity: 40
    max_humidity: 60
    target_humidity: 60
    dry_tolerance: 1
    wet_tolerance: 1
    device_class: "humidifier"
    min_cycle_duration:
      seconds: 15
    keep_alive:
      hours: 1
    initial_state: true
    sensor_stale_duration:
      minutes: 30

climate:
  - platform: generic_thermostat
    name: Охлаждение RPi
    unique_id: rpi_cooling_system
    heater: switch.rpi_cooling_fan
    target_sensor: sensor.rpi_cpu_temperature
    min_temp: 40
    max_temp: 80
    target_temp: 60
    cold_tolerance: 5
    hot_tolerance: 5
    ac_mode: true
  - platform: generic_thermostat
    name: Кондиционер
    unique_id: conditioner
    heater: switch.meross_power_outlet_1
    target_sensor: sensor.airmonitor2_temperature
    min_temp: 15
    max_temp: 30
    target_temp: 25
    cold_tolerance: 1
    hot_tolerance: 1
    ac_mode: true
    initial_hvac_mode: "cool"
    min_cycle_duration:
      minutes: 5
